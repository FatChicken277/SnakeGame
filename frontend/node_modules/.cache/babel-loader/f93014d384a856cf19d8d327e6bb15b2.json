{"remainingRequest":"/home/alejo/go/src/github.com/SnakeGame/frontend/node_modules/babel-loader/lib/index.js!/home/alejo/go/src/github.com/SnakeGame/frontend/node_modules/vuetify/lib/components/VAutocomplete/VAutocomplete.js","dependencies":[{"path":"/home/alejo/go/src/github.com/SnakeGame/frontend/node_modules/vuetify/lib/components/VAutocomplete/VAutocomplete.js","mtime":1643167961022},{"path":"/home/alejo/go/src/github.com/SnakeGame/frontend/babel.config.js","mtime":1643159580523},{"path":"/home/alejo/go/src/github.com/SnakeGame/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1643167959374},{"path":"/home/alejo/go/src/github.com/SnakeGame/frontend/node_modules/babel-loader/lib/index.js","mtime":1643167959830}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/components/VAutocomplete/VAutocomplete.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      if (!this.autoSelectFirst) {\n        const preSelectedItem = oldVal[this.$refs.menu.listIndex]\n\n        if (preSelectedItem) {\n          this.setMenuIndex(val.findIndex(i => i === preSelectedItem))\n        } else {\n          this.setMenuIndex(-1)\n        }\n        this.$emit('update:list-index', this.$refs.menu.listIndex)\n      }\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n\n        if (this.autoSelectFirst && val.length) {\n          this.setMenuIndex(0)\n          this.$emit('update:list-index', this.$refs.menu.listIndex)\n        }\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      if (!this.multiple && value === '') this.deleteCurrentItem()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (\n        !this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (\n        !this.multiple &&\n        !this.valueComparator(\n          this.internalSearch,\n          this.getValue(this.internalValue)\n        )\n      ) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n"],"sourceRoot":""}]}