{"remainingRequest":"/home/alejo/go/src/github.com/SnakeGame/frontend/node_modules/babel-loader/lib/index.js!/home/alejo/go/src/github.com/SnakeGame/frontend/node_modules/eslint-loader/index.js??ref--14-0!/home/alejo/go/src/github.com/SnakeGame/frontend/src/game/scenes/PlayScene.js","dependencies":[{"path":"/home/alejo/go/src/github.com/SnakeGame/frontend/src/game/scenes/PlayScene.js","mtime":1643152785204},{"path":"/home/alejo/go/src/github.com/SnakeGame/frontend/babel.config.js","mtime":1643050256260},{"path":"/home/alejo/go/src/github.com/SnakeGame/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1643055001493},{"path":"/home/alejo/go/src/github.com/SnakeGame/frontend/node_modules/babel-loader/lib/index.js","mtime":1643055001473},{"path":"/home/alejo/go/src/github.com/SnakeGame/frontend/node_modules/eslint-loader/index.js","mtime":1643055001701}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/alejo/go/src/github.com/SnakeGame/frontend/src/game/scenes/PlayScene.js"],"names":["Scene","Actions","Math","PhaserMath","axios","background","snakeHead","snakeBody","greenApple","redApple","horizontalObstacle","verticalObstacle","eatGreenSound","eatRedSound","deadSound","WIDTH","HEIGHT","BACKGROUND","SNAKE_HEAD","SNAKE_BODY","GREEN_APPLE","RED_APPLE","HORIZONTAL_OBSTACLE","VERTICAL_OBSTACLE","EAT_GREEN_SOUND","EAT_RED_SOUND","DEAD_SOUND","PlayScene","key","data","backgroundMusic","music","score","eaten","alive","load","image","audio","cameras","main","fadeIn","tweens","add","targets","volume","duration","tileSprite","setOrigin","boundWidth","width","boundHeight","height","physics","world","setBounds","body","group","frameQuantity","tail","getLast","head","setCollideWorldBounds","setDepth","input","on","pointer","moveTo","worldX","worldY","startFollow","FOLLOW_LOCKON","obstacles","food","time","addEvent","delay","callback","generateFood","args","callbackScope","loop","overlap","eat","collider","die","type","Boolean","random","countActive","randomX","Between","randomY","create","texture","sound","play","i","bodyparts","length","destroy","generateObstacle","angle","obstacle","setBounce","setVelocityY","setVelocityX","undefined","setVelocity","fadeOut","updateScore","setTimeout","scene","start","config","method","url","headers","Authorization","localStorage","getItem","max_score","then","response","console","log","message","catch","err","getChildren","ShiftPosition","x","y"],"mappings":"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","sourcesContent":["import { Scene, Actions, Math as PhaserMath } from 'phaser';\nimport axios from 'axios';\nimport background from '@/game/assets/background.svg';\nimport snakeHead from '@/game/assets/head.svg';\nimport snakeBody from '@/game/assets/body.svg';\nimport greenApple from '@/game/assets/green-apple.svg';\nimport redApple from '@/game/assets/red-apple.svg';\nimport horizontalObstacle from '@/game/assets/horizontal-obstacle.svg';\nimport verticalObstacle from '@/game/assets/vertical-obstacle.svg';\nimport eatGreenSound from '@/game/assets/eat-green.ogg';\nimport eatRedSound from '@/game/assets/eat-red.ogg';\nimport deadSound from '@/game/assets/dead-sound.ogg';\n\nconst WIDTH = 1920;\nconst HEIGHT = 1080;\n\nconst BACKGROUND = 'background';\nconst SNAKE_HEAD = 'snake-head';\nconst SNAKE_BODY = 'snake-body';\nconst GREEN_APPLE = 'green-apple';\nconst RED_APPLE = 'red-apple';\n\nconst HORIZONTAL_OBSTACLE = 'horizontal-obstacle';\nconst VERTICAL_OBSTACLE = 'vertical-obstacle';\n\nconst EAT_GREEN_SOUND = 'eat-green-sound';\nconst EAT_RED_SOUND = 'eat-red-sound';\n\nconst DEAD_SOUND = 'dead-sound';\n\nexport default class PlayScene extends Scene {\n  constructor() {\n    super({ key: 'PlayScene' });\n  }\n\n  init(data) {\n    this.backgroundMusic = data.music;\n    this.score = 0;\n    this.eaten = 0;\n    this.alive = true;\n  }\n\n  preload() {\n    this.load.image(BACKGROUND, background);\n    this.load.image(SNAKE_HEAD, snakeHead);\n    this.load.image(SNAKE_BODY, snakeBody);\n    this.load.image(GREEN_APPLE, greenApple);\n    this.load.image(RED_APPLE, redApple);\n    this.load.image(HORIZONTAL_OBSTACLE, horizontalObstacle);\n    this.load.image(VERTICAL_OBSTACLE, verticalObstacle);\n\n    this.load.audio(EAT_GREEN_SOUND, eatGreenSound);\n    this.load.audio(EAT_RED_SOUND, eatRedSound);\n    this.load.audio(DEAD_SOUND, deadSound);\n  }\n\n  create() {\n    this.cameras.main.fadeIn(1000);\n    this.tweens.add({\n      targets: this.backgroundMusic,\n      volume: 0,\n      duration: 20000,\n    });\n\n    this.background = this.add.tileSprite(0, 0, 1920, 1920, BACKGROUND).setOrigin(0);\n    const boundWidth = this.background.width;\n    const boundHeight = this.background.height;\n    this.physics.world.setBounds(0, 0, boundWidth, boundHeight, true, true, true, true);\n\n    this.body = this.add.group({ key: SNAKE_BODY, frameQuantity: 2 });\n\n    this.tail = this.body.getLast(true);\n\n    this.head = this.physics.add.image(WIDTH / 2, HEIGHT / 2, SNAKE_HEAD);\n    this.head.setCollideWorldBounds(true);\n    this.head.setDepth(1);\n\n    this.input.on('pointermove', (pointer) => {\n      if (this.alive === true) {\n        this.physics.moveTo(this.head, pointer.worldX, pointer.worldY, 500);\n      }\n    }, this);\n\n    this.cameras.main.startFollow(this.head, this.cameras.main.FOLLOW_LOCKON, 0.05, 0.05);\n\n    this.obstacles = this.physics.add.group();\n\n    this.food = this.physics.add.group();\n\n    this.time.addEvent({\n      delay: 2000,\n      callback: this.generateFood,\n      args: [GREEN_APPLE],\n      callbackScope: this,\n      loop: true,\n    });\n    this.time.addEvent({\n      delay: 5000,\n      callback: this.generateFood,\n      args: [RED_APPLE],\n      callbackScope: this,\n      loop: true,\n    });\n\n    this.physics.add.overlap(this.head, this.food, this.eat, null, this);\n    this.physics.add.collider(this.head, this.obstacles, this.die, null, this);\n  }\n\n  generateFood(type) {\n    const add = type === GREEN_APPLE || Boolean(Math.random() <= 0.5);\n\n    if (this.food.countActive() > 19 || !add) return;\n\n    const randomX = PhaserMath.Between(this.background.width * 0.1, this.background.width * 0.9);\n    const randomY = PhaserMath.Between(this.background.height * 0.1, this.background.height * 0.9);\n\n    this.food.create(randomX, randomY, type);\n  }\n\n  eat(head, food) {\n    this.eaten += 1;\n\n    if (food.texture.key === GREEN_APPLE) {\n      this.body.create(-10000, 0, SNAKE_BODY);\n      this.sound.play(EAT_GREEN_SOUND);\n      this.score += 1;\n    } else {\n      for (let i = 0; i < this.bodyparts.length / 2; i += 1) {\n        this.tail = this.body.getLast(true);\n        if (this.tail != null) {\n          this.tail.destroy(true);\n          this.sound.play(EAT_RED_SOUND);\n          this.score -= 1;\n        }\n      }\n    }\n\n    if (this.bodyparts.length === 1) {\n      this.die();\n    }\n\n    if (this.eaten % 10 === 0 && this.eaten !== 0) {\n      this.generateObstacle();\n    }\n\n    food.destroy(true);\n  }\n\n  generateObstacle() {\n    const randomX = PhaserMath.Between(this.background.width * 0.1, this.background.width * 0.9);\n    const randomY = PhaserMath.Between(this.background.height * 0.1, this.background.height * 0.9);\n\n    const angle = Math.random() <= 0.5 ? VERTICAL_OBSTACLE : HORIZONTAL_OBSTACLE;\n\n    const obstacle = this.obstacles.create(randomX, randomY, angle);\n    obstacle.setBounce(1);\n    obstacle.setCollideWorldBounds(true);\n\n    if (angle === VERTICAL_OBSTACLE) {\n      obstacle.setVelocityY(450);\n    } else {\n      obstacle.setVelocityX(450);\n    }\n  }\n\n  die(head, obstacle) {\n    this.alive = false;\n    this.sound.play(DEAD_SOUND, { volume: 0.3 });\n\n    if (obstacle !== undefined) {\n      obstacle.setBounce(0);\n      obstacle.setVelocity(0, 0);\n    }\n\n    this.head.setVelocity(0, 0);\n\n    this.cameras.main.fadeOut(500);\n\n    if (this.score > 0) {\n      this.updateScore();\n    }\n\n    setTimeout(() => {\n      this.scene.start('MenuScene', { score: this.score, music: this.backgroundMusic });\n    }, 500);\n  }\n\n  updateScore() {\n    const config = {\n      method: 'put',\n      url: 'http://localhost:3000/v1/players/score',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n        'Content-Type': 'application/json',\n      },\n      data: {\n        max_score: this.score,\n      },\n    };\n\n    axios(config)\n      .then((response) => {\n        console.log(response.data.message);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  update() {\n    this.bodyparts = this.body.getChildren();\n    if (this.bodyparts.length > 0) {\n      Actions.ShiftPosition(this.bodyparts, this.head.x, this.head.y);\n    }\n  }\n}\n"]}]}